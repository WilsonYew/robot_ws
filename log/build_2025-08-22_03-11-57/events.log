[0.000000] (-) TimerEvent: {}
[0.001053] (-) JobUnselected: {'identifier': 'dd_bot'}
[0.001865] (-) JobUnselected: {'identifier': 'diffdrive_arduino'}
[0.002411] (-) JobUnselected: {'identifier': 'golftrolley'}
[0.002489] (-) JobUnselected: {'identifier': 'mpu6050driver'}
[0.002558] (-) JobUnselected: {'identifier': 'ros2_control_cmake'}
[0.002627] (-) JobUnselected: {'identifier': 'serial'}
[0.002716] (-) JobUnselected: {'identifier': 'serial_motor_demo'}
[0.003239] (-) JobUnselected: {'identifier': 'serial_motor_demo_msgs'}
[0.003408] (-) JobUnselected: {'identifier': 'stereo_camera_split'}
[0.003483] (-) JobUnselected: {'identifier': 'ydlidar_ros2_driver'}
[0.003550] (-) JobUnselected: {'identifier': 'ydlidar_sdk'}
[0.003632] (stereo_camera_node) JobQueued: {'identifier': 'stereo_camera_node', 'dependencies': OrderedDict()}
[0.003913] (stereo_camera_node) JobStarted: {'identifier': 'stereo_camera_node'}
[0.049845] (stereo_camera_node) JobProgress: {'identifier': 'stereo_camera_node', 'progress': 'cmake'}
[0.053043] (stereo_camera_node) JobProgress: {'identifier': 'stereo_camera_node', 'progress': 'build'}
[0.056077] (stereo_camera_node) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/golftrolley/robot_ws/build/stereo_camera_node', '--', '-j4', '-l4'], 'cwd': '/home/golftrolley/robot_ws/build/stereo_camera_node', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'golftrolley', 'SSH_CLIENT': '10.42.0.1 41114 22', 'LC_TIME': 'ms_MY.UTF-8', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/sdformat_vendor/share/gz', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/golftrolley/.vscode-server/cli/servers/Stable-360a4e4fd251bfce169a4ddf857c7d25d1ad40da/server/extensions/git/dist/askpass.sh', 'SHLVL': '2', 'LD_LIBRARY_PATH': '/home/golftrolley/robot_ws/install/serial_motor_demo_msgs/lib:/home/golftrolley/robot_ws/install/serial/lib:/home/golftrolley/robot_ws/install/diffdrive_arduino/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/lib/aarch64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'BROWSER': '/home/golftrolley/.vscode-server/cli/servers/Stable-360a4e4fd251bfce169a4ddf857c7d25d1ad40da/server/bin/helpers/browser.sh', 'HOME': '/home/golftrolley', 'OLDPWD': '/home/golftrolley/robot_ws', 'TERM_PROGRAM_VERSION': '1.103.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-514271e3-cd22-446c-8e9f-d6ac4a05e617.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/golftrolley/.vscode-server/cli/servers/Stable-360a4e4fd251bfce169a4ddf857c7d25d1ad40da/server/extensions/git/dist/askpass-main.js', 'LC_MONETARY': 'ms_MY.UTF-8', 'VSCODE_GIT_ASKPASS_NODE': '/home/golftrolley/.vscode-server/cli/servers/Stable-360a4e4fd251bfce169a4ddf857c7d25d1ad40da/server/node', 'SSL_CERT_FILE': '/usr/lib/ssl/cert.pem', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/golftrolley/robot_ws/install', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'golftrolley', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'PATH': '/home/golftrolley/.vscode-server/cli/servers/Stable-360a4e4fd251bfce169a4ddf857c7d25d1ad40da/server/bin/remote-cli:/home/golftrolley/robot_ws/install/ydlidar_sdk/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/golftrolley/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand', 'LC_ADDRESS': 'ms_MY.UTF-8', 'XDG_RUNTIME_DIR': '/run/user/1000', 'SSL_CERT_DIR': '/usr/lib/ssl/certs', 'LANG': 'en_US.UTF-8', 'LC_TELEPHONE': 'ms_MY.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-81043886d8.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/golftrolley/robot_ws/install/ydlidar_ros2_driver:/home/golftrolley/robot_ws/install/stereo_camera_split:/home/golftrolley/robot_ws/install/stereo_camera_node:/home/golftrolley/robot_ws/install/serial_motor_demo:/home/golftrolley/robot_ws/install/serial_motor_demo_msgs:/home/golftrolley/robot_ws/install/serial:/home/golftrolley/robot_ws/install/ros2_control_cmake:/home/golftrolley/robot_ws/install/my_v4l2_camera:/home/golftrolley/robot_ws/install/mpu6050driver:/home/golftrolley/robot_ws/install/golftrolley:/home/golftrolley/robot_ws/install/diffdrive_arduino:/home/golftrolley/robot_ws/install/dd_bot:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'LC_NAME': 'ms_MY.UTF-8', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'LC_MEASUREMENT': 'ms_MY.UTF-8', 'LC_IDENTIFICATION': 'ms_MY.UTF-8', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/golftrolley/robot_ws/build/stereo_camera_node', 'LC_ALL': 'en_US.UTF-8', 'SSH_CONNECTION': '10.42.0.1 41114 10.42.0.2 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/golftrolley/robot_ws/build/stereo_camera_split:/home/golftrolley/robot_ws/install/stereo_camera_split/lib/python3.12/site-packages:/home/golftrolley/robot_ws/build/serial_motor_demo:/home/golftrolley/robot_ws/install/serial_motor_demo/lib/python3.12/site-packages:/home/golftrolley/robot_ws/install/serial_motor_demo_msgs/lib/python3.12/site-packages:/home/golftrolley/robot_ws/build/golftrolley:/home/golftrolley/robot_ws/install/golftrolley/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'LC_NUMERIC': 'ms_MY.UTF-8', 'LC_PAPER': 'ms_MY.UTF-8', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/golftrolley/robot_ws/install/ydlidar_sdk:/home/golftrolley/robot_ws/install/ydlidar_ros2_driver:/home/golftrolley/robot_ws/install/stereo_camera_node:/home/golftrolley/robot_ws/install/serial_motor_demo_msgs:/home/golftrolley/robot_ws/install/serial:/home/golftrolley/robot_ws/install/ros2_control_cmake:/home/golftrolley/robot_ws/install/my_v4l2_camera:/home/golftrolley/robot_ws/install/mpu6050driver:/home/golftrolley/robot_ws/install/diffdrive_arduino:/home/golftrolley/robot_ws/install/dd_bot:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/home/golftrolley/robot_ws/install/stereo_camera_split:/home/golftrolley/robot_ws/install/serial_motor_demo:/home/golftrolley/robot_ws/install/golftrolley:/opt/ros/jazzy'}), 'shell': False}
[0.099232] (-) TimerEvent: {}
[0.199958] (-) TimerEvent: {}
[0.300754] (-) TimerEvent: {}
[0.401511] (-) TimerEvent: {}
[0.412708] (stereo_camera_node) StdoutLine: {'line': b'[ 40%] Built target stereo_calibration_capture\n'}
[0.421228] (stereo_camera_node) StdoutLine: {'line': b'[ 60%] \x1b[32mBuilding CXX object CMakeFiles/stereo_camera_node.dir/src/main.cpp.o\x1b[0m\n'}
[0.426506] (stereo_camera_node) StdoutLine: {'line': b'[ 80%] \x1b[32mBuilding CXX object CMakeFiles/stereo_camera_node.dir/src/stereo_camera_node.cpp.o\x1b[0m\n'}
[0.501740] (-) TimerEvent: {}
[0.602407] (-) TimerEvent: {}
[0.703154] (-) TimerEvent: {}
[0.803824] (-) TimerEvent: {}
[0.904527] (-) TimerEvent: {}
[1.005209] (-) TimerEvent: {}
[1.105925] (-) TimerEvent: {}
[1.206575] (-) TimerEvent: {}
[1.307249] (-) TimerEvent: {}
[1.407969] (-) TimerEvent: {}
[1.508635] (-) TimerEvent: {}
[1.609360] (-) TimerEvent: {}
[1.710073] (-) TimerEvent: {}
[1.810811] (-) TimerEvent: {}
[1.911536] (-) TimerEvent: {}
[2.012315] (-) TimerEvent: {}
[2.113210] (-) TimerEvent: {}
[2.214096] (-) TimerEvent: {}
[2.315205] (-) TimerEvent: {}
[2.416024] (-) TimerEvent: {}
[2.516899] (-) TimerEvent: {}
[2.617991] (-) TimerEvent: {}
[2.719516] (-) TimerEvent: {}
[2.820611] (-) TimerEvent: {}
[2.921254] (-) TimerEvent: {}
[3.021932] (-) TimerEvent: {}
[3.122766] (-) TimerEvent: {}
[3.223640] (-) TimerEvent: {}
[3.324492] (-) TimerEvent: {}
[3.426853] (-) TimerEvent: {}
[3.527738] (-) TimerEvent: {}
[3.631075] (-) TimerEvent: {}
[3.732123] (-) TimerEvent: {}
[3.833154] (-) TimerEvent: {}
[3.934107] (-) TimerEvent: {}
[4.034958] (-) TimerEvent: {}
[4.135801] (-) TimerEvent: {}
[4.236621] (-) TimerEvent: {}
[4.337611] (-) TimerEvent: {}
[4.438412] (-) TimerEvent: {}
[4.539206] (-) TimerEvent: {}
[4.640016] (-) TimerEvent: {}
[4.741920] (-) TimerEvent: {}
[4.843841] (-) TimerEvent: {}
[4.945783] (-) TimerEvent: {}
[5.046698] (-) TimerEvent: {}
[5.147971] (-) TimerEvent: {}
[5.249218] (-) TimerEvent: {}
[5.350510] (-) TimerEvent: {}
[5.452408] (-) TimerEvent: {}
[5.554309] (-) TimerEvent: {}
[5.656054] (-) TimerEvent: {}
[5.757925] (-) TimerEvent: {}
[5.859769] (-) TimerEvent: {}
[5.961820] (-) TimerEvent: {}
[6.062786] (-) TimerEvent: {}
[6.164807] (-) TimerEvent: {}
[6.266750] (-) TimerEvent: {}
[6.368559] (-) TimerEvent: {}
[6.470705] (-) TimerEvent: {}
[6.572435] (-) TimerEvent: {}
[6.673998] (-) TimerEvent: {}
[6.775710] (-) TimerEvent: {}
[6.877433] (-) TimerEvent: {}
[6.979366] (-) TimerEvent: {}
[7.081413] (-) TimerEvent: {}
[7.183305] (-) TimerEvent: {}
[7.285000] (-) TimerEvent: {}
[7.385807] (-) TimerEvent: {}
[7.487011] (-) TimerEvent: {}
[7.588316] (-) TimerEvent: {}
[7.689169] (-) TimerEvent: {}
[7.790013] (-) TimerEvent: {}
[7.890833] (-) TimerEvent: {}
[7.991698] (-) TimerEvent: {}
[8.092476] (-) TimerEvent: {}
[8.193364] (-) TimerEvent: {}
[8.294244] (-) TimerEvent: {}
[8.395827] (-) TimerEvent: {}
[8.497231] (-) TimerEvent: {}
[8.599279] (-) TimerEvent: {}
[8.701063] (-) TimerEvent: {}
[8.802825] (-) TimerEvent: {}
[8.903764] (-) TimerEvent: {}
[9.005569] (-) TimerEvent: {}
[9.106473] (-) TimerEvent: {}
[9.207290] (-) TimerEvent: {}
[9.308590] (-) TimerEvent: {}
[9.410065] (-) TimerEvent: {}
[9.511428] (-) TimerEvent: {}
[9.612385] (-) TimerEvent: {}
[9.713934] (-) TimerEvent: {}
[9.815477] (-) TimerEvent: {}
[9.917112] (-) TimerEvent: {}
[10.018487] (-) TimerEvent: {}
[10.119868] (-) TimerEvent: {}
[10.221321] (-) TimerEvent: {}
[10.322979] (-) TimerEvent: {}
[10.425874] (-) TimerEvent: {}
[10.526879] (-) TimerEvent: {}
[10.628967] (-) TimerEvent: {}
[10.730090] (-) TimerEvent: {}
[10.831083] (-) TimerEvent: {}
[10.932065] (-) TimerEvent: {}
[11.033058] (-) TimerEvent: {}
[11.134062] (-) TimerEvent: {}
[11.234880] (-) TimerEvent: {}
[11.335823] (-) TimerEvent: {}
[11.436700] (-) TimerEvent: {}
[11.537513] (-) TimerEvent: {}
[11.638451] (-) TimerEvent: {}
[11.739393] (-) TimerEvent: {}
[11.840362] (-) TimerEvent: {}
[11.942456] (-) TimerEvent: {}
[12.044797] (-) TimerEvent: {}
[12.146505] (-) TimerEvent: {}
[12.248505] (-) TimerEvent: {}
[12.349376] (-) TimerEvent: {}
[12.450225] (-) TimerEvent: {}
[12.551171] (-) TimerEvent: {}
[12.652070] (-) TimerEvent: {}
[12.753344] (-) TimerEvent: {}
[12.854224] (-) TimerEvent: {}
[12.955118] (-) TimerEvent: {}
[13.055929] (-) TimerEvent: {}
[13.156777] (-) TimerEvent: {}
[13.257746] (-) TimerEvent: {}
[13.358506] (-) TimerEvent: {}
[13.459383] (-) TimerEvent: {}
[13.560300] (-) TimerEvent: {}
[13.661586] (-) TimerEvent: {}
[13.762417] (-) TimerEvent: {}
[13.863727] (-) TimerEvent: {}
[13.965082] (-) TimerEvent: {}
[14.066088] (-) TimerEvent: {}
[14.166857] (-) TimerEvent: {}
[14.267826] (-) TimerEvent: {}
[14.368832] (-) TimerEvent: {}
[14.469784] (-) TimerEvent: {}
[14.573859] (-) TimerEvent: {}
[14.677841] (-) TimerEvent: {}
[14.780865] (-) TimerEvent: {}
[14.888866] (-) TimerEvent: {}
[14.989859] (-) TimerEvent: {}
[15.090896] (-) TimerEvent: {}
[15.196123] (-) TimerEvent: {}
[15.297261] (-) TimerEvent: {}
[15.401960] (-) TimerEvent: {}
[15.504637] (-) TimerEvent: {}
[15.606012] (-) TimerEvent: {}
[15.707327] (-) TimerEvent: {}
[15.808188] (-) TimerEvent: {}
[15.909642] (-) TimerEvent: {}
[16.010618] (-) TimerEvent: {}
[16.111539] (-) TimerEvent: {}
[16.212378] (-) TimerEvent: {}
[16.313719] (-) TimerEvent: {}
[16.414972] (-) TimerEvent: {}
[16.515796] (-) TimerEvent: {}
[16.617076] (-) TimerEvent: {}
[16.718334] (-) TimerEvent: {}
[16.819472] (-) TimerEvent: {}
[16.920908] (-) TimerEvent: {}
[17.022518] (-) TimerEvent: {}
[17.123605] (-) TimerEvent: {}
[17.224627] (-) TimerEvent: {}
[17.325725] (-) TimerEvent: {}
[17.427187] (-) TimerEvent: {}
[17.528707] (-) TimerEvent: {}
[17.629494] (-) TimerEvent: {}
[17.730970] (-) TimerEvent: {}
[17.831812] (-) TimerEvent: {}
[17.933305] (-) TimerEvent: {}
[18.034952] (-) TimerEvent: {}
[18.136445] (-) TimerEvent: {}
[18.238343] (-) TimerEvent: {}
[18.339355] (-) TimerEvent: {}
[18.440470] (-) TimerEvent: {}
[18.546279] (-) TimerEvent: {}
[18.649503] (-) TimerEvent: {}
[18.751590] (-) TimerEvent: {}
[18.854317] (-) TimerEvent: {}
[18.956227] (-) TimerEvent: {}
[19.058019] (-) TimerEvent: {}
[19.159722] (-) TimerEvent: {}
[19.261583] (-) TimerEvent: {}
[19.362557] (-) TimerEvent: {}
[19.464377] (-) TimerEvent: {}
[19.560224] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/main.cpp:1\x1b[m\x1b[K:\n'}
[19.561235] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid StereoCameraNode::\x1b[01;32m\x1b[KleftCallback\x1b[m\x1b[K(sensor_msgs::msg::Image_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.562015] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::publish(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.564888] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;31m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.567270] (-) TimerEvent: {}
[19.570918] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.573346] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[19.574431] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[19.577123] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[19.580189] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[19.581137] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[19.585881] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22\x1b[m\x1b[K,\n'}
[19.588390] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38\x1b[m\x1b[K,\n'}
[19.591412] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[19.592349] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[19.596057] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172\x1b[m\x1b[K,\n'}
[19.598628] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:1\x1b[m\x1b[K:\n'}
[19.601644] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.607111] (stereo_camera_node) StderrLine: {'line': b'  242 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[19.609252] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.610248] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.611141] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.615108] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;36m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.616033] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.618626] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.619861] (stereo_camera_node) StderrLine: {'line': b'  296 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.622365] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.623740] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.624526] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/13/bits/move.h:37\x1b[m\x1b[K,\n'}
[19.625412] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/new_allocator.h:36\x1b[m\x1b[K,\n'}
[19.628587] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/aarch64-linux-gnu/c++/13/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[19.629442] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[19.630343] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/memory:65\x1b[m\x1b[K,\n'}
[19.634028] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:169\x1b[m\x1b[K:\n'}
[19.634888] (stereo_camera_node) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.637716] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, sensor_msgs::msg::Image_<std::allocator<void> > >::value), void> rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with T = std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.638846] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K   required from here\n'}
[19.639943] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.643162] (stereo_camera_node) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[19.644136] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.645070] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.649159] (stereo_camera_node) StderrLine: {'line': b'  326 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[19.650244] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.654444] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.655435] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.656248] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;36m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.659300] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.660428] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.661505] (stereo_camera_node) StderrLine: {'line': b'  376 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.665175] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.666209] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.668921] (-) TimerEvent: {}
[19.669605] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.670604] (stereo_camera_node) StderrLine: {'line': b'  394 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[19.673299] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.674216] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[19.677211] (stereo_camera_node) StderrLine: {'line': b'  394 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[19.678287] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.680541] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rclcpp::SerializedMessage&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.681415] (stereo_camera_node) StderrLine: {'line': b'  400 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[19.682305] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.687028] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.688089] (stereo_camera_node) StderrLine: {'line': b'  400 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[19.690767] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.691705] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Image_<std::allocator<void> >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.694336] (stereo_camera_node) StderrLine: {'line': b'  414 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[19.695310] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.696200] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.700043] (stereo_camera_node) StderrLine: {'line': b'  414 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[19.701026] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.705873] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid StereoCameraNode::\x1b[01;32m\x1b[KrightCallback\x1b[m\x1b[K(sensor_msgs::msg::Image_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.706918] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::publish(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.708084] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;31m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.709134] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.709971] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.711251] (stereo_camera_node) StderrLine: {'line': b'  242 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[19.712070] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.712800] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.713510] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.714369] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;36m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.715138] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.715864] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.716622] (stereo_camera_node) StderrLine: {'line': b'  296 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.717419] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.718278] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.719050] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.720000] (stereo_camera_node) StderrLine: {'line': b'  326 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[19.720744] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.721473] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.722376] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.723247] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;36m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.724027] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.724789] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.725615] (stereo_camera_node) StderrLine: {'line': b'  376 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.726418] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.727195] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.727968] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.728830] (stereo_camera_node) StderrLine: {'line': b'  394 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[19.729560] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.730302] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[19.731114] (stereo_camera_node) StderrLine: {'line': b'  394 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[19.731899] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.732621] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rclcpp::SerializedMessage&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.733510] (stereo_camera_node) StderrLine: {'line': b'  400 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[19.734300] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.735055] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.735792] (stereo_camera_node) StderrLine: {'line': b'  400 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[19.736580] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.737343] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Image_<std::allocator<void> >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.738214] (stereo_camera_node) StderrLine: {'line': b'  414 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[19.739029] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.739723] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.740818] (stereo_camera_node) StderrLine: {'line': b'  414 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[19.741593] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.742359] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/main.cpp:\x1b[m\x1b[K At global scope:\n'}
[19.743175] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/main.cpp:4:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredefinition of \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.743952] (stereo_camera_node) StderrLine: {'line': b'    4 | int \x1b[01;31m\x1b[Kmain\x1b[m\x1b[K(int argc, char **argv)\n'}
[19.744732] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[19.745567] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:105:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99 previously defined here\n'}
[19.746455] (stereo_camera_node) StderrLine: {'line': b'  105 | int \x1b[01;36m\x1b[Kmain\x1b[m\x1b[K(int argc, char **argv)\n'}
[19.747323] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[19.769129] (-) TimerEvent: {}
[19.774320] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid StereoCameraNode::\x1b[01;32m\x1b[KleftCallback\x1b[m\x1b[K(sensor_msgs::msg::Image_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.775209] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::publish(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.777240] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;31m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.779576] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.780433] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[19.781260] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[19.782700] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[19.783509] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[19.784285] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[19.786542] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22\x1b[m\x1b[K,\n'}
[19.787498] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38\x1b[m\x1b[K,\n'}
[19.788415] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[19.789194] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[19.790011] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172\x1b[m\x1b[K,\n'}
[19.790761] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:1\x1b[m\x1b[K:\n'}
[19.791479] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.792463] (stereo_camera_node) StderrLine: {'line': b'  242 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[19.793304] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.794103] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.794997] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.795966] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;36m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.796690] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.797435] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.798783] (stereo_camera_node) StderrLine: {'line': b'  296 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.800229] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.801452] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.802237] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/13/bits/move.h:37\x1b[m\x1b[K,\n'}
[19.802956] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/new_allocator.h:36\x1b[m\x1b[K,\n'}
[19.803627] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/aarch64-linux-gnu/c++/13/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[19.804340] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[19.805069] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/memory:65\x1b[m\x1b[K,\n'}
[19.805783] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:169\x1b[m\x1b[K:\n'}
[19.806530] (stereo_camera_node) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.807352] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, sensor_msgs::msg::Image_<std::allocator<void> > >::value), void> rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with T = std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.808206] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K   required from here\n'}
[19.808937] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.809750] (stereo_camera_node) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[19.810491] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.811208] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.812193] (stereo_camera_node) StderrLine: {'line': b'  326 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[19.812959] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.813760] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.814515] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:73:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.815270] (stereo_camera_node) StderrLine: {'line': b'   73 |     \x1b[01;36m\x1b[Krect_left_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.816031] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.816768] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.817531] (stereo_camera_node) StderrLine: {'line': b'  376 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.818283] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.819044] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.819879] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.820624] (stereo_camera_node) StderrLine: {'line': b'  394 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[19.821528] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.822332] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[19.823106] (stereo_camera_node) StderrLine: {'line': b'  394 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[19.823933] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.824744] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rclcpp::SerializedMessage&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.825641] (stereo_camera_node) StderrLine: {'line': b'  400 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[19.826425] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.827163] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.827897] (stereo_camera_node) StderrLine: {'line': b'  400 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[19.828623] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.829398] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Image_<std::allocator<void> >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.830173] (stereo_camera_node) StderrLine: {'line': b'  414 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[19.831002] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.831745] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.832604] (stereo_camera_node) StderrLine: {'line': b'  414 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[19.833332] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.834062] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid StereoCameraNode::\x1b[01;32m\x1b[KrightCallback\x1b[m\x1b[K(sensor_msgs::msg::Image_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[19.834724] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> > >::publish(std::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.835498] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;31m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.836260] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.837061] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.838015] (stereo_camera_node) StderrLine: {'line': b'  242 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[19.838836] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.839536] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.840278] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.841176] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;36m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.842157] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.842936] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.843770] (stereo_camera_node) StderrLine: {'line': b'  296 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.844507] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.845357] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:296:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.846247] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.847272] (stereo_camera_node) StderrLine: {'line': b'  326 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[19.848017] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.848681] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:326:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.849406] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:86:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Image_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.850188] (stereo_camera_node) StderrLine: {'line': b'   86 |     \x1b[01;36m\x1b[Krect_right_pub_->publish(rect_msg)\x1b[m\x1b[K;\n'}
[19.850884] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.851599] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const T&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.852426] (stereo_camera_node) StderrLine: {'line': b'  376 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[19.853196] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.853947] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:376:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[19.854690] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.855477] (stereo_camera_node) StderrLine: {'line': b'  394 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[19.856255] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.856961] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:394:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[19.857835] (stereo_camera_node) StderrLine: {'line': b'  394 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[19.858589] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.859348] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(const rclcpp::SerializedMessage&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.860124] (stereo_camera_node) StderrLine: {'line': b'  400 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[19.860869] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.861612] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:400:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.862530] (stereo_camera_node) StderrLine: {'line': b'  400 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[19.863340] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[19.864138] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) \x1b[35m\x1b[K[with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Image_<std::allocator<void> >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.865092] (stereo_camera_node) StderrLine: {'line': b'  414 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[19.865963] (stereo_camera_node) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[19.866810] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:414:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<sensor_msgs::msg::Image_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[19.868082] (stereo_camera_node) StderrLine: {'line': b'  414 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[19.868999] (stereo_camera_node) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[19.869847] (-) TimerEvent: {}
[19.970543] (-) TimerEvent: {}
[20.071457] (-) TimerEvent: {}
[20.172354] (-) TimerEvent: {}
[20.273281] (-) TimerEvent: {}
[20.374187] (-) TimerEvent: {}
[20.451840] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:59\x1b[m\x1b[K,\n'}
[20.452750] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[20.453514] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/cv_bridge/cv_bridge/cv_bridge.hpp:43\x1b[m\x1b[K,\n'}
[20.454286] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:4\x1b[m\x1b[K:\n'}
[20.458211] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = unsigned int]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[20.459036] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:49:44:\x1b[m\x1b[K   required from here\n'}
[20.459630] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, unsigned int&, unsigned int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.460267] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.461537] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.465086] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.465767] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[20.466419] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.471699] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.472542] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.473322] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.474097] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.474791] (-) TimerEvent: {}
[20.475322] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.476259] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[20.477123] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.477891] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.478718] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.479522] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.480409] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.481211] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.481983] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[20.483383] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.484824] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.485792] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.486593] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.487386] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.488259] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.489043] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[20.489789] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.490606] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.491460] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.492313] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.493071] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.493792] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.494534] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[20.495355] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.496043] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.496731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.497539] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.498281] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.499028] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.499752] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[20.500518] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.501322] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.502133] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.502938] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.504550] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.506054] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.506942] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[20.507721] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.508640] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.509578] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.510357] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.511202] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.512086] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.513132] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[20.513967] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.514725] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.515716] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.516745] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.517713] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.518642] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.519469] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[20.520214] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.520928] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.521615] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[20.522319] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.523016] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.523735] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[20.524601] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.525350] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.526148] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[20.526864] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.527588] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.528312] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[20.529044] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.529784] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.530569] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[20.531343] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.532098] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.532834] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[20.533538] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.534297] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.535103] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[20.535850] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.536556] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.537395] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[20.538209] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.538962] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.539757] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[20.540547] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.541306] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.542179] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[20.542932] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.543620] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.544424] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[20.545192] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.545902] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.546606] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[20.547374] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.548159] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.548866] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[20.549576] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[20.550326] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.551098] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[20.551900] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.552710] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.553477] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[20.554385] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.555265] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.556204] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[20.557027] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.557802] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.558779] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.559617] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.560395] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.561164] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.561946] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[20.562736] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.563548] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.564257] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.564940] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.565586] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.566317] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.567067] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[20.567765] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.568491] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.569223] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.570009] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.570713] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.571445] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.572185] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[20.572902] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.573560] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.574266] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.574964] (-) TimerEvent: {}
[20.575455] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.576366] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.577148] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.577899] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[20.578596] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.579379] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.580163] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.581866] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.583324] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.584217] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.585038] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[20.585759] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.586594] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.587345] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.588245] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.589015] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.589729] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.590589] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[20.591324] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.592097] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.592840] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.593574] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.594343] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.595108] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.595887] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[20.596595] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.597357] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.598122] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.598957] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.599812] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.600563] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.601420] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[20.602282] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.603032] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.604056] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.604802] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.605548] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.606316] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.607106] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[20.607874] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.608616] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.609400] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.610159] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[20.610988] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[20.611974] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.612875] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[20.613795] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.614554] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.615366] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.616193] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.616965] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.617646] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.618399] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[20.619154] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.619816] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.620553] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.621301] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[20.622066] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.622851] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.623598] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = std::array<double, 9>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[20.624379] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:51:36:\x1b[m\x1b[K   required from here\n'}
[20.625220] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, std::array<double, 9>&, std::array<double, 9>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.625994] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.626793] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.627525] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.628357] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[20.629109] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.629842] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.630698] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[20.631585] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.632327] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.633084] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[20.634620] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.636055] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.637001] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[20.637842] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.638542] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.639366] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[20.640187] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.640897] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.641800] (stereo_camera_node) StderrLine: {'line': b' 1159 | void read(const FileNode& node, \x1b[01;36m\x1b[Kshort& value\x1b[m\x1b[K, short default_value)\n'}
[20.642601] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.643380] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.644223] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[20.644969] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.645788] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.646712] (stereo_camera_node) StderrLine: {'line': b' 1151 | void read(const FileNode& node, \x1b[01;36m\x1b[Kushort& value\x1b[m\x1b[K, ushort default_value)\n'}
[20.647490] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.648244] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.649043] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[20.649771] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.650539] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.651340] (stereo_camera_node) StderrLine: {'line': b' 1143 | void read(const FileNode& node, \x1b[01;36m\x1b[Kschar& value\x1b[m\x1b[K, schar default_value)\n'}
[20.652127] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.652941] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.653782] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[20.654643] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.655407] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.656206] (stereo_camera_node) StderrLine: {'line': b' 1135 | void read(const FileNode& node, \x1b[01;36m\x1b[Kuchar& value\x1b[m\x1b[K, uchar default_value)\n'}
[20.657016] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.657851] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.658575] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[20.659500] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.660457] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.661462] (stereo_camera_node) StderrLine: {'line': b' 1127 | void read(const FileNode& node, \x1b[01;36m\x1b[Kbool& value\x1b[m\x1b[K, bool default_value)\n'}
[20.662441] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.663216] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.663925] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[20.664625] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.665420] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.666362] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[20.667221] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.668077] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.668988] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[20.669693] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.670421] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.676068] (-) TimerEvent: {}
[20.676544] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[20.677418] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.680400] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.681273] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[20.682043] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.682609] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.686011] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[20.686735] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.687336] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.687930] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[20.688474] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.690332] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.691500] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[20.692459] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.693131] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.693773] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[20.695245] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.696094] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.696890] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[20.697609] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[20.698385] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.699162] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[20.699885] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.700590] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.701325] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[20.702242] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.703029] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.703935] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[20.704738] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.705424] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.706106] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kdouble& value\x1b[m\x1b[K, double default_value);\n'}
[20.706738] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.707391] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.708086] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[20.708749] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.709450] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.710199] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kfloat& value\x1b[m\x1b[K, float default_value);\n'}
[20.710893] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.711620] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.712390] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[20.713118] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.713873] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.714572] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kint& value\x1b[m\x1b[K, int default_value);\n'}
[20.715325] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.716077] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.716935] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[20.717721] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.718518] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.719230] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.719941] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.720688] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.721412] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.722189] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[20.722891] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.723626] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.724388] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.725124] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.725827] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.726546] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.727350] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[20.728117] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.729016] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.729765] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.731451] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.732908] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.733640] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.734528] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[20.735276] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.735964] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.736630] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.737375] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.738054] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.738702] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.739419] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[20.740169] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.740862] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.741612] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.742444] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.743176] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.743879] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.744566] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[20.745426] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.746174] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.746935] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.747680] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.748345] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.749018] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.749759] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[20.750484] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.751272] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.752177] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.753001] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.753852] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.754601] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.755423] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[20.756204] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.756957] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.757688] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.758391] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.759069] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.759889] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.760568] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[20.761271] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.761894] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.762524] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.763307] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.764091] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.764830] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.765556] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[20.766276] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.766908] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.767527] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.768226] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[20.768874] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[20.769510] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.770221] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[20.770858] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.771470] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.772231] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.772927] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.773571] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.774245] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.775022] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[20.775691] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.776337] (-) TimerEvent: {}
[20.776839] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.777840] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.778520] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[20.780186] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.781538] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.782303] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = std::array<double, 12>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[20.783030] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:54:36:\x1b[m\x1b[K   required from here\n'}
[20.783752] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, std::array<double, 12>&, std::array<double, 12>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.784476] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.785167] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.785787] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.786676] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[20.787455] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.788298] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.789047] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[20.789715] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.790443] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.791190] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[20.791800] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.792410] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.793136] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[20.793776] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.794469] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.795243] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[20.795978] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.796555] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.797200] (stereo_camera_node) StderrLine: {'line': b' 1159 | void read(const FileNode& node, \x1b[01;36m\x1b[Kshort& value\x1b[m\x1b[K, short default_value)\n'}
[20.797843] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.798483] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.799159] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[20.799874] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.800514] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.801367] (stereo_camera_node) StderrLine: {'line': b' 1151 | void read(const FileNode& node, \x1b[01;36m\x1b[Kushort& value\x1b[m\x1b[K, ushort default_value)\n'}
[20.802089] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.802738] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.803459] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[20.804178] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.804783] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.805440] (stereo_camera_node) StderrLine: {'line': b' 1143 | void read(const FileNode& node, \x1b[01;36m\x1b[Kschar& value\x1b[m\x1b[K, schar default_value)\n'}
[20.806137] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.806731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.807470] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[20.808240] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.808906] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.809558] (stereo_camera_node) StderrLine: {'line': b' 1135 | void read(const FileNode& node, \x1b[01;36m\x1b[Kuchar& value\x1b[m\x1b[K, uchar default_value)\n'}
[20.810249] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.810938] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.811608] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[20.812303] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.812978] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.813743] (stereo_camera_node) StderrLine: {'line': b' 1127 | void read(const FileNode& node, \x1b[01;36m\x1b[Kbool& value\x1b[m\x1b[K, bool default_value)\n'}
[20.814451] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.815161] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.815848] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[20.816500] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.817223] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.817960] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[20.818608] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.819266] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.819933] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[20.820578] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.821299] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.822024] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[20.822601] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.823331] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.824097] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[20.824968] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.825587] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.826277] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[20.826987] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.827556] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.828292] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[20.828982] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.829625] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.830385] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[20.831063] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.831743] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.832415] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[20.833981] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.835474] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.836271] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[20.836966] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[20.837573] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.838243] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[20.838861] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.839479] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[20.840174] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[20.841032] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.841757] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.842446] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[20.843168] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.843826] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.844487] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kdouble& value\x1b[m\x1b[K, double default_value);\n'}
[20.845211] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.845896] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.846686] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[20.847438] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.848300] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.849086] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kfloat& value\x1b[m\x1b[K, float default_value);\n'}
[20.849833] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.850546] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.851363] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[20.852214] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.852948] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.853719] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kint& value\x1b[m\x1b[K, int default_value);\n'}
[20.854472] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.855455] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.856232] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[20.857044] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.857781] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.858493] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.859261] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.860010] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.860744] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.861501] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[20.862240] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.862947] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.863696] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.864468] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.865233] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.865914] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.866689] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[20.867409] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.868182] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.869068] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.869883] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.870609] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.871484] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.872334] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[20.873143] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.873966] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.874734] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.875479] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.876210] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.876871] (-) TimerEvent: {}
[20.877382] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.878209] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[20.878957] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.879721] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.880563] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.881351] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.882258] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.883082] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.884007] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[20.884756] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.885485] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.886299] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.887053] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.887696] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.888409] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.889149] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[20.889835] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.890515] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.891250] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.892035] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.892756] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.893470] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.894235] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[20.894948] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.895790] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.896623] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.897537] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.898286] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.899006] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.899731] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[20.900415] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.901119] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.901750] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.902501] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.903380] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.904144] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.904878] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[20.905549] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.906265] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.907088] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.907901] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[20.908723] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[20.909459] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.910211] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[20.910917] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.911731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[20.912458] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.913229] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.913950] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.914696] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.915440] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[20.916198] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.916883] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.917575] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.918351] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[20.919174] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.919998] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[20.920795] (stereo_camera_node) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core.hpp:59\x1b[m\x1b[K,\n'}
[20.921537] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/core.hpp:48\x1b[m\x1b[K,\n'}
[20.922391] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/cv_bridge/cv_bridge/cv_bridge.hpp:43\x1b[m\x1b[K,\n'}
[20.923177] (stereo_camera_node) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:4\x1b[m\x1b[K:\n'}
[20.923903] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = unsigned int]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[20.924579] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:49:44:\x1b[m\x1b[K   required from here\n'}
[20.925348] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, unsigned int&, unsigned int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.926086] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.926869] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.927502] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.928122] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[20.928712] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.929399] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.930133] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.930889] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.931745] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.932524] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.933329] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[20.934094] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.934840] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.935523] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.936346] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.937078] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.937804] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.938549] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[20.939335] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.940079] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.940848] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.941625] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.942363] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.943151] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.943923] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[20.944876] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.945569] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.946438] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99} to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.947324] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.948167] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.948933] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.949693] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[20.950449] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.951189] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.951884] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.952598] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.953373] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.954138] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.954795] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[20.955573] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.956408] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.957283] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.958012] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.958640] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.959411] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.960169] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[20.960885] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.961570] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.962289] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.963043] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.963730] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.964479] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99 (near match)\n'}
[20.965225] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[20.965960] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.966731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  conversion of argument 2 would be ill-formed:\n'}
[20.967480] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot bind non-const lvalue reference of type \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99 to a value of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.968290] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[20.969045] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[20.969742] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.970613] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[20.971401] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.972174] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.973014] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[20.973777] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.974638] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.975525] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[20.976305] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.977059] (-) TimerEvent: {}
[20.978362] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.979282] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[20.980035] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.980705] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.981435] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[20.982143] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.983643] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.984439] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[20.985145] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.985798] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.986550] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[20.987291] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.987968] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.988682] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[20.989361] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.990013] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.990748] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[20.991455] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.992193] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.992900] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[20.993565] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[20.994260] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.994954] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[20.995597] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[20.996303] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.997031] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[20.997754] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[20.998416] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[20.999188] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[21.000118] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.000805] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.001513] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[21.002219] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[21.002890] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.003686] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[21.004393] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.005064] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.005748] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[21.006437] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.007103] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.007774] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[21.008481] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.009175] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.009784] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.010447] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.011131] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.011757] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.012534] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[21.013276] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.014004] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.014723] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.015462] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.016322] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.017035] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.017825] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[21.018560] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.019244] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.019856] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.020560] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.021255] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.022037] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.022717] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[21.023399] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.024117] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.024799] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.025575] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.026310] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.027020] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.027679] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[21.028351] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.029038] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.029609] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.030309] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.031063] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.031756] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.032466] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[21.033223] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.033960] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.034603] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.035319] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.036048] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.036700] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.037415] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[21.038251] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.039037] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.039775] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.040464] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.041131] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.041915] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.042764] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[21.043562] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.044347] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.045036] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.045679] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.046346] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.047035] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.047689] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[21.048322] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.049062] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.049711] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.050391] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.051114] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.051868] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.052606] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[21.053281] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.053963] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.054697] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.055435] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[21.056678] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[21.057442] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.058203] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[21.058956] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.059688] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.060439] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.061189] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.061870] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.062509] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.063154] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[21.063716] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.064383] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.065051] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.065903] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[21.066612] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.067314] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.068053] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = std::array<double, 9>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.068629] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:51:36:\x1b[m\x1b[K   required from here\n'}
[21.069332] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, std::array<double, 9>&, std::array<double, 9>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.070018] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.070692] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.071378] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.072088] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[21.072789] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.073503] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.074398] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[21.075218] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.076021] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.076849] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[21.077608] (-) TimerEvent: {}
[21.079003] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.079988] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.080852] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[21.081706] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.082466] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.083348] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[21.084163] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.084864] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.085567] (stereo_camera_node) StderrLine: {'line': b' 1159 | void read(const FileNode& node, \x1b[01;36m\x1b[Kshort& value\x1b[m\x1b[K, short default_value)\n'}
[21.087075] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.088581] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.089367] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[21.090172] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.090925] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.091601] (stereo_camera_node) StderrLine: {'line': b' 1151 | void read(const FileNode& node, \x1b[01;36m\x1b[Kushort& value\x1b[m\x1b[K, ushort default_value)\n'}
[21.092372] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.093171] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.093986] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[21.094852] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.095583] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.096328] (stereo_camera_node) StderrLine: {'line': b' 1143 | void read(const FileNode& node, \x1b[01;36m\x1b[Kschar& value\x1b[m\x1b[K, schar default_value)\n'}
[21.097164] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.097893] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.098617] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[21.099469] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.100239] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.101165] (stereo_camera_node) StderrLine: {'line': b' 1135 | void read(const FileNode& node, \x1b[01;36m\x1b[Kuchar& value\x1b[m\x1b[K, uchar default_value)\n'}
[21.101927] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.102594] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.103398] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[21.104270] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.105083] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.105903] (stereo_camera_node) StderrLine: {'line': b' 1127 | void read(const FileNode& node, \x1b[01;36m\x1b[Kbool& value\x1b[m\x1b[K, bool default_value)\n'}
[21.106618] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.107363] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.108067] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[21.108772] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.109512] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.110267] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[21.111010] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.111708] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.112585] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[21.113367] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.114206] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.115026] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[21.115744] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.116497] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.117258] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[21.117969] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.118644] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.119518] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[21.120345] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.121192] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.121960] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[21.122715] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.123418] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.124200] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[21.124950] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.125714] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.126711] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[21.127531] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.128349] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.129129] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[21.129877] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[21.130560] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.131967] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[21.133079] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.133835] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.134585] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[21.135428] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.136234] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.136979] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[21.137785] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.138532] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.139345] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kdouble& value\x1b[m\x1b[K, double default_value);\n'}
[21.140150] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.141263] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.144050] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[21.144998] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.145915] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.147218] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kfloat& value\x1b[m\x1b[K, float default_value);\n'}
[21.148746] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.149737] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.150641] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[21.151490] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.152255] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.153021] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kint& value\x1b[m\x1b[K, int default_value);\n'}
[21.153625] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.154389] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.156439] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[21.157552] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.158581] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.161505] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.162381] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.163179] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.163882] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.164688] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[21.165443] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.166255] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.167041] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.167863] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.168610] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.169408] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.170207] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[21.170979] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.171731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.172437] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.173237] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.173951] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.174736] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.175501] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[21.176225] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.177071] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.177882] (-) TimerEvent: {}
[21.178376] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.179408] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.180263] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.181008] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.181773] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[21.182556] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.183354] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.184230] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.185243] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.186150] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.186897] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.187589] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[21.188316] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.189055] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.189744] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.190459] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.191231] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.191932] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.192629] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[21.193456] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.194196] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.194941] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.195726] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.196512] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.197258] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.198047] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[21.198765] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.199507] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.200245] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.200974] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.201731] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.202490] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.203371] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[21.204278] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.205121] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.206229] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.207092] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.207765] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.208495] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.209395] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[21.210178] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.210871] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.211566] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.212343] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[21.213098] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[21.213876] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.214614] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[21.215412] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.216202] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.216953] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 9>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.217722] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.218435] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.219181] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.219885] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[21.220605] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.221423] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.222206] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.223115] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[21.223935] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.224727] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.225506] (stereo_camera_node) StderrLine: {'line': b'/usr/include/opencv4/opencv2/core/persistence.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Koperator>>\x1b[m\x1b[K(const FileNode&, _Tp&) \x1b[35m\x1b[K[with _Tp = std::array<double, 12>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.226340] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/home/golftrolley/robot_ws/src/stereo_camera_node/src/stereo_camera_node.cpp:54:36:\x1b[m\x1b[K   required from here\n'}
[21.227141] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kread(const cv::FileNode&, std::array<double, 12>&, std::array<double, 12>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.228062] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;31m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.228973] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.229768] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&, const std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.230610] (stereo_camera_node) StderrLine: {'line': b' 1203 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<DMatch>& vec, const std::vector<DMatch>& default_value )\n'}
[21.231375] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.232078] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1203:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::DMatch>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.232851] (stereo_camera_node) StderrLine: {'line': b' 1203 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<DMatch>& vec\x1b[m\x1b[K, const std::vector<DMatch>& default_value )\n'}
[21.233560] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.234300] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&, const std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.235110] (stereo_camera_node) StderrLine: {'line': b' 1194 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<KeyPoint>& vec, const std::vector<KeyPoint>& default_value )\n'}
[21.235965] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.236775] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1194:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<cv::KeyPoint>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.237586] (stereo_camera_node) StderrLine: {'line': b' 1194 | void read( const FileNode& node, \x1b[01;36m\x1b[Kstd::vector<KeyPoint>& vec\x1b[m\x1b[K, const std::vector<KeyPoint>& default_value )\n'}
[21.238409] (stereo_camera_node) StderrLine: {'line': b'      |                                  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.239274] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, short int&, short int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.240067] (stereo_camera_node) StderrLine: {'line': b' 1159 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, short& value, short default_value)\n'}
[21.240791] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.241542] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1159:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kshort int&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.242306] (stereo_camera_node) StderrLine: {'line': b' 1159 | void read(const FileNode& node, \x1b[01;36m\x1b[Kshort& value\x1b[m\x1b[K, short default_value)\n'}
[21.243085] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.243886] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, ushort&, ushort)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.244629] (stereo_camera_node) StderrLine: {'line': b' 1151 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, ushort& value, ushort default_value)\n'}
[21.245395] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.246156] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1151:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kushort&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kshort unsigned int&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.246945] (stereo_camera_node) StderrLine: {'line': b' 1151 | void read(const FileNode& node, \x1b[01;36m\x1b[Kushort& value\x1b[m\x1b[K, ushort default_value)\n'}
[21.247700] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.248696] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, schar&, schar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.249476] (stereo_camera_node) StderrLine: {'line': b' 1143 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, schar& value, schar default_value)\n'}
[21.250230] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.251187] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1143:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kschar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Ksigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.252075] (stereo_camera_node) StderrLine: {'line': b' 1143 | void read(const FileNode& node, \x1b[01;36m\x1b[Kschar& value\x1b[m\x1b[K, schar default_value)\n'}
[21.252890] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.253806] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, uchar&, uchar)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.254584] (stereo_camera_node) StderrLine: {'line': b' 1135 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, uchar& value, uchar default_value)\n'}
[21.255331] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.256134] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1135:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kuchar&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kunsigned char&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.256876] (stereo_camera_node) StderrLine: {'line': b' 1135 | void read(const FileNode& node, \x1b[01;36m\x1b[Kuchar& value\x1b[m\x1b[K, uchar default_value)\n'}
[21.257580] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.258323] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, bool&, bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.259112] (stereo_camera_node) StderrLine: {'line': b' 1127 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, bool& value, bool default_value)\n'}
[21.259915] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.260682] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1127:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kbool&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.261485] (stereo_camera_node) StderrLine: {'line': b' 1127 | void read(const FileNode& node, \x1b[01;36m\x1b[Kbool& value\x1b[m\x1b[K, bool default_value)\n'}
[21.262249] (stereo_camera_node) StderrLine: {'line': b'      |                                 \x1b[01;36m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.263061] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Range&, const Range&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.263868] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Range& value, const Range& default_value)\n'}
[21.264644] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.265441] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:792:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Range&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.266293] (stereo_camera_node) StderrLine: {'line': b'  792 | static inline void read(const FileNode& node, \x1b[01;36m\x1b[KRange& value\x1b[m\x1b[K, const Range& default_value)\n'}
[21.267096] (stereo_camera_node) StderrLine: {'line': b'      |                                               \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.268023] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, DMatch&, const DMatch&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.268838] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, DMatch& value, const DMatch& default_value);\n'}
[21.269560] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.270267] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:734:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::DMatch&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.271100] (stereo_camera_node) StderrLine: {'line': b'  734 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KDMatch& value\x1b[m\x1b[K, const DMatch& default_value);\n'}
[21.271931] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.272732] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, KeyPoint&, const KeyPoint&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.273501] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, KeyPoint& value, const KeyPoint& default_value);\n'}
[21.274328] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.275276] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:733:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::KeyPoint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.276226] (stereo_camera_node) StderrLine: {'line': b'  733 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KKeyPoint& value\x1b[m\x1b[K, const KeyPoint& default_value);\n'}
[21.277092] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.277880] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, SparseMat&, const SparseMat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.278584] (-) TimerEvent: {}
[21.279102] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, SparseMat& mat, const SparseMat& default_mat = SparseMat() );\n'}
[21.280009] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.280762] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:728:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::SparseMat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.281600] (stereo_camera_node) StderrLine: {'line': b'  728 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KSparseMat& mat\x1b[m\x1b[K, const SparseMat& default_mat = SparseMat() );\n'}
[21.282455] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[21.283176] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Mat&, const Mat&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.283758] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Mat& mat, const Mat& default_mat = Mat() );\n'}
[21.284388] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.285053] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:727:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kcv::Mat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.285963] (stereo_camera_node) StderrLine: {'line': b'  727 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[KMat& mat\x1b[m\x1b[K, const Mat& default_mat = Mat() );\n'}
[21.287743] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~\x1b[m\x1b[K\n'}
[21.289791] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::string&, const std::string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.291911] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::string& value, const std::string& default_value);\n'}
[21.292747] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.293518] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:726:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[21.294369] (stereo_camera_node) StderrLine: {'line': b'  726 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kstd::string& value\x1b[m\x1b[K, const std::string& default_value);\n'}
[21.295130] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.295764] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, double&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.296476] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, double& value, double default_value);\n'}
[21.297257] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.298002] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:725:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kdouble&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.298713] (stereo_camera_node) StderrLine: {'line': b'  725 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kdouble& value\x1b[m\x1b[K, double default_value);\n'}
[21.299450] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.300281] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, float&, float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.301088] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, float& value, float default_value);\n'}
[21.301831] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.302489] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:724:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kfloat&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.303280] (stereo_camera_node) StderrLine: {'line': b'  724 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kfloat& value\x1b[m\x1b[K, float default_value);\n'}
[21.304059] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.304757] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, int&, int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.305476] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, int& value, int default_value);\n'}
[21.306211] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.307185] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:723:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 2 from \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint&\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.308027] (stereo_camera_node) StderrLine: {'line': b'  723 | CV_EXPORTS void read(const FileNode& node, \x1b[01;36m\x1b[Kint& value\x1b[m\x1b[K, int default_value);\n'}
[21.308706] (stereo_camera_node) StderrLine: {'line': b'      |                                            \x1b[01;36m\x1b[K~~~~~^~~~~\x1b[m\x1b[K\n'}
[21.309509] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point_<_Tp>&, const Point_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.310326] (stereo_camera_node) StderrLine: {'line': b'  736 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)\n'}
[21.311057] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.311717] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:736:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.312403] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.313120] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.313776] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.314533] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Point3_<_Tp>&, const Point3_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.315298] (stereo_camera_node) StderrLine: {'line': b'  742 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)\n'}
[21.316017] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.316731] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:742:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.317441] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Point3_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.318189] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.318896] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.319588] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Size_<_Tp>&, const Size_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.320337] (stereo_camera_node) StderrLine: {'line': b'  749 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)\n'}
[21.321053] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.321768] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:749:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.322523] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Size_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.323281] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.324039] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.324727] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Complex<_Tp>&, const Complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.325526] (stereo_camera_node) StderrLine: {'line': b'  755 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)\n'}
[21.326285] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.327065] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:755:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.327752] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.328547] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.329308] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.330117] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Rect_<_Tp>&, const Rect_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.330917] (stereo_camera_node) StderrLine: {'line': b'  761 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)\n'}
[21.331740] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.332544] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:761:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.333281] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Rect_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.334202] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.335040] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.335771] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int cn> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Vec<_Tp, m>&, const Vec<_Tp, m>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.336555] (stereo_camera_node) StderrLine: {'line': b'  768 | template<typename _Tp, int cn> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)\n'}
[21.337300] (stereo_camera_node) StderrLine: {'line': b'      |                                                   \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.338043] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:768:51:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.338829] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Vec<_Tp, m>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.339611] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.340424] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.341216] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, int m, int n> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Matx<_Tp, m, n>&, const Matx<_Tp, m, n>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.341934] (stereo_camera_node) StderrLine: {'line': b'  774 | template<typename _Tp, int m, int n> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Matx<_Tp, m, n>& value, const Matx<_Tp, m, n>& default_matx = Matx<_Tp, m, n>())\n'}
[21.342800] (stereo_camera_node) StderrLine: {'line': b'      |                                                         \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.343548] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:774:57:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.344287] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Matx<_Tp, m, n>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.345011] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.345680] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.346428] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, Scalar_<_Tp>&, const Scalar_<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.347197] (stereo_camera_node) StderrLine: {'line': b'  785 | template<typename _Tp> static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)\n'}
[21.347947] (stereo_camera_node) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.348699] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:785:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.349488] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kcv::Scalar_<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.350283] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.351059] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.351775] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(FileNodeIterator&, std::vector<BufferT>&, size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.352540] (stereo_camera_node) StderrLine: {'line': b' 1167 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )\n'}
[21.353271] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.354047] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1167:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.354926] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.355740] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.356557] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.357370] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, typename std::enable_if<std::is_enum<_Tp>::value>::type* <anonymous> > void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, _Tp&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.358282] (stereo_camera_node) StderrLine: {'line': b' 1174 | static inline void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, _Tp& value, const _Tp& default_value = static_cast<_Tp>(0))\n'}
[21.359079] (stereo_camera_node) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.359760] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1174:20:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.360471] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1173:85:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.361218] (stereo_camera_node) StderrLine: {'line': b' 1173 | template<typename _Tp, typename std::enable_if< std::is_enum<_Tp>::value >::type* = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K>\n'}
[21.361918] (stereo_camera_node) StderrLine: {'line': b'      |                                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[21.362588] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> void cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<BufferT>&, const std::vector<BufferT>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.363323] (stereo_camera_node) StderrLine: {'line': b' 1182 | void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )\n'}
[21.364062] (stereo_camera_node) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.364780] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1182:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.365509] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:1281:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::array<double, 12>\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<BufferT>\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.366247] (stereo_camera_node) StderrLine: {'line': b' 1281 |     \x1b[01;36m\x1b[Kread( n, value, _Tp())\x1b[m\x1b[K;\n'}
[21.366939] (stereo_camera_node) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.367604] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<KeyPoint>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.368374] (stereo_camera_node) StderrLine: {'line': b'  730 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<KeyPoint>& keypoints);\n'}
[21.369176] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.369890] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:730:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.370709] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid cv::\x1b[01;32m\x1b[Kread\x1b[m\x1b[K(const FileNode&, std::vector<DMatch>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.371468] (stereo_camera_node) StderrLine: {'line': b'  731 | CV_EXPORTS void \x1b[01;36m\x1b[Kread\x1b[m\x1b[K(const FileNode& node, std::vector<DMatch>& matches);\n'}
[21.372226] (stereo_camera_node) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[21.372978] (stereo_camera_node) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/opencv4/opencv2/core/persistence.hpp:731:17:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 3 provided\n'}
[21.378804] (-) TimerEvent: {}
[21.479555] (-) TimerEvent: {}
[21.580380] (-) TimerEvent: {}
[21.681222] (-) TimerEvent: {}
[21.782034] (-) TimerEvent: {}
[21.882858] (-) TimerEvent: {}
[21.983621] (-) TimerEvent: {}
[22.084429] (-) TimerEvent: {}
[22.185327] (-) TimerEvent: {}
[22.286609] (-) TimerEvent: {}
[22.387454] (-) TimerEvent: {}
[22.488366] (-) TimerEvent: {}
[22.590198] (-) TimerEvent: {}
[22.691078] (-) TimerEvent: {}
[22.791919] (-) TimerEvent: {}
[22.892750] (-) TimerEvent: {}
[22.993553] (-) TimerEvent: {}
[23.094372] (-) TimerEvent: {}
[23.195293] (-) TimerEvent: {}
[23.296149] (-) TimerEvent: {}
[23.397383] (-) TimerEvent: {}
[23.498354] (-) TimerEvent: {}
[23.600945] (-) TimerEvent: {}
[23.701861] (-) TimerEvent: {}
[23.803184] (-) TimerEvent: {}
[23.904471] (-) TimerEvent: {}
[24.005413] (-) TimerEvent: {}
[24.106321] (-) TimerEvent: {}
[24.207167] (-) TimerEvent: {}
[24.308017] (-) TimerEvent: {}
[24.408817] (-) TimerEvent: {}
[24.509602] (-) TimerEvent: {}
[24.610464] (-) TimerEvent: {}
[24.711418] (-) TimerEvent: {}
[24.812712] (-) TimerEvent: {}
[24.913532] (-) TimerEvent: {}
[25.014495] (-) TimerEvent: {}
[25.115403] (-) TimerEvent: {}
[25.216288] (-) TimerEvent: {}
[25.317176] (-) TimerEvent: {}
[25.418022] (-) TimerEvent: {}
[25.518846] (-) TimerEvent: {}
[25.619713] (-) TimerEvent: {}
[25.720490] (-) TimerEvent: {}
[25.821814] (-) TimerEvent: {}
[25.922734] (-) TimerEvent: {}
[26.023527] (-) TimerEvent: {}
[26.124804] (-) TimerEvent: {}
[26.225609] (-) TimerEvent: {}
[26.326441] (-) TimerEvent: {}
[26.427262] (-) TimerEvent: {}
[26.528093] (-) TimerEvent: {}
[26.628915] (-) TimerEvent: {}
[26.729723] (-) TimerEvent: {}
[26.830511] (-) TimerEvent: {}
[26.931352] (-) TimerEvent: {}
[27.032273] (-) TimerEvent: {}
[27.133223] (-) TimerEvent: {}
[27.234032] (-) TimerEvent: {}
[27.334851] (-) TimerEvent: {}
[27.435624] (-) TimerEvent: {}
[27.536500] (-) TimerEvent: {}
[27.637840] (-) TimerEvent: {}
[27.738754] (-) TimerEvent: {}
[27.839543] (-) TimerEvent: {}
[27.940491] (-) TimerEvent: {}
[28.041443] (-) TimerEvent: {}
[28.142434] (-) TimerEvent: {}
[28.243441] (-) TimerEvent: {}
[28.344429] (-) TimerEvent: {}
[28.445508] (-) TimerEvent: {}
[28.547154] (-) TimerEvent: {}
[28.649188] (-) TimerEvent: {}
[28.750512] (-) TimerEvent: {}
[28.851448] (-) TimerEvent: {}
[28.952354] (-) TimerEvent: {}
[29.053735] (-) TimerEvent: {}
[29.154535] (-) TimerEvent: {}
[29.255912] (-) TimerEvent: {}
[29.357202] (-) TimerEvent: {}
[29.458490] (-) TimerEvent: {}
[29.559873] (-) TimerEvent: {}
[29.661746] (-) TimerEvent: {}
[29.762625] (-) TimerEvent: {}
[29.863732] (-) TimerEvent: {}
[29.964538] (-) TimerEvent: {}
[30.065347] (-) TimerEvent: {}
[30.166113] (-) TimerEvent: {}
[30.266857] (-) TimerEvent: {}
[30.367803] (-) TimerEvent: {}
[30.468532] (-) TimerEvent: {}
[30.569405] (-) TimerEvent: {}
[30.670293] (-) TimerEvent: {}
[30.771192] (-) TimerEvent: {}
[30.872016] (-) TimerEvent: {}
[30.972820] (-) TimerEvent: {}
[31.073596] (-) TimerEvent: {}
[31.174428] (-) TimerEvent: {}
[31.275314] (-) TimerEvent: {}
[31.376729] (-) TimerEvent: {}
[31.478171] (-) TimerEvent: {}
[31.537912] (stereo_camera_node) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/stereo_camera_node.dir/build.make:76: CMakeFiles/stereo_camera_node.dir/src/main.cpp.o] Error 1\n'}
[31.538776] (stereo_camera_node) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[31.578368] (-) TimerEvent: {}
[31.679184] (-) TimerEvent: {}
[31.779992] (-) TimerEvent: {}
[31.881149] (-) TimerEvent: {}
[31.886305] (stereo_camera_node) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/stereo_camera_node.dir/build.make:90: CMakeFiles/stereo_camera_node.dir/src/stereo_camera_node.cpp.o] Error 1\n'}
[31.887516] (stereo_camera_node) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/stereo_camera_node.dir/all] Error 2\n'}
[31.888523] (stereo_camera_node) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[31.897845] (stereo_camera_node) CommandEnded: {'returncode': 2}
[31.946506] (stereo_camera_node) JobEnded: {'identifier': 'stereo_camera_node', 'rc': 2}
[32.135621] (-) TimerEvent: {}
[32.136342] (-) EventReactorShutdown: {}
